{"version":3,"sources":["global/appConfig.js","global/dialogService.js","global/components/Dialog.js","global/authService.js","global/requiresAuth.hook.js","main/components/NavHeader.js","main/App.js","main/Welcome.js","main/components/LoginForm.js","main/Login.js","main/states.js","main/Home.js","router.config.js","index.js"],"names":["instance","AppConfig","Object","_Users_ashleydonald_Downloads_sample_app_react_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","sort","emailAddress","undefined","restDelay","load","assign","_objectSpread","JSON","parse","sessionStorage","getItem","Error","console","log","setItem","stringify","DialogService","_this","_Users_ashleydonald_Downloads_sample_app_react_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","confirm","message","details","arguments","length","confirmMsg","denyMsg","component","Promise","reject","promise","resolve","update","__registerDialogComponent","Dialog","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","info","onConfirm","onDeny","setState","hidden","setTimeout","active","close","confirmed","_this$state","state","assertThisInitialized","_this$state2","dialog","react_default","a","createElement","className","style","paddingTop","onClick","Component","AuthService","usernames","username","password","validUsername","indexOf","validPassword","then","authenticatedUser","save","hook","criteria","to","data","requiresAuth","callback","transition","$state","router","stateService","isAuthenticated","target","location","NavHeader","handleLogout","onLogout","navbar","lib_esm","class","role","marginRight","margin","App","logout","go","reload","components_NavHeader","Welcome","LoginForm","handleSubmit","_this$props","onSubmit","handleChangeUsername","event","onChangeValues","value","handleChangePassword","_this$props2","usernameOptions","error","loading","htmlFor","name","id","onChange","disabled","map","option","key","display","position","bottom","marginLeft","height","type","React","Login","handleChangeCredentials","credentials","handleLogin","returnTo","authenticating","authenticate","params","catch","errorMessage","components_LoginForm","states","redirectTo","parent","url","token","deps","resolveFn","$transition$","redirectedFrom","targetState","from","lazyLoad","all","__webpack_require__","e","bind","t","module","plugin","Visualizer","transitionService","onBefore","reqAuthHook","priority","UIRouterReact","servicesPlugin","hashLocationPlugin","appStates","forEach","stateRegistry","register","urlService","rules","initial","ReactDOM","render","components_Dialog","document","getElementById"],"mappings":"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","file":"static/js/main.4008c08b.chunk.js","sourcesContent":["/**\n* This service stores and retrieves user preferences in session storage\n*/\nclass AppConfig {\n  constructor() {\n    this.sort = '+date';\n    this.emailAddress = undefined;\n    this.restDelay = 100;\n    this.load();\n  }\n\n  load () {\n    try {\n      Object.assign(this, {\n        ...JSON.parse(sessionStorage.getItem('appConfig'))\n      });\n    } catch (Error) { console.log(); }\n  }\n\n  save () {\n    sessionStorage.setItem('appConfig', JSON.stringify({ ...this }));\n  }\n}\n\nlet instance = new AppConfig();\nexport default instance;\n","class DialogService {\n  constructor () {\n    this.component = undefined;\n  }\n\n  confirm = (message, details = \"Are you sure?\", confirmMsg = \"Yes\", denyMsg = \"No\") => {\n    if (typeof this.component === 'undefined') return Promise.reject(false);\n    let promise = new Promise((resolve, reject) => {\n      this.component.update(\n        { message, details, confirmMsg, denyMsg },\n        resolve, reject\n      );\n    });\n    return promise;\n  }\n\n  __registerDialogComponent = (component) => {\n    this.component = component;\n  }\n}\n\nlet instance = new DialogService();\nexport default instance;","import React, {Component} from 'react';\nimport DialogService from '../dialogService.js';\n\nclass Dialog extends Component {\n  constructor (props) {\n    super(props);\n    DialogService.__registerDialogComponent(this);\n    this.state = {\n      active: false,\n      message: '',\n      details: '',\n      confirmMsg: '',\n      denyMsg: '',\n      onConfirm: () => {},\n      onDeny: () => {},\n      hidden: true\n    }\n  }\n  update = (info, onConfirm, onDeny) => {\n    this.setState({ ...info, onConfirm, onDeny, hidden: false });\n    setTimeout(() => this.setState({active:true}));\n  }\n  close = (confirmed) => {\n    const { onConfirm, onDeny } = this.state;\n    return () => {\n      this.setState({ hidden: true, active: false });\n      if (confirmed) onConfirm(true);\n      else onDeny(false);\n    }\n  }\n  render () {\n    let { active, hidden, message, details, confirmMsg, denyMsg, onConfirm, onDeny } = this.state;\n    let dialog = (\n      <div className={'dialog ' + (active ? 'active' : '')}>\n        <div className=\"backdrop\" />\n        <div className='wrapper'>\n          <div className=\"content\">\n            {message ? <h4>{message}</h4> : null}\n            {details ? <div>{details}</div> : null}\n\n            <div style={{paddingTop: '1em'}}>\n            <button className=\"btn btn-primary\" onClick={this.close(true)}>{confirmMsg}</button>\n            <button className=\"btn btn-primary\" onClick={this.close(false)}>{denyMsg}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    return hidden ? null : dialog;\n  }\n}\n\nexport default Dialog;\n","import AppConfig from './appConfig';\n/**\n * This service emulates an Authentication Service.\n */\nclass AuthService {\n  constructor() {\n    this.usernames = ['myself@angular.dev', 'devgal@angular.dev', 'devguy@angular.dev'];\n  }\n\n  isAuthenticated () {\n    return !!AppConfig.emailAddress;\n  }\n\n  /**\n  * Fake authentication function that returns a promise that is either resolved or rejected.\n  *\n  * Given a username and password, checks that the username matches one of the known\n  * usernames (this.usernames), and that the password matches 'password'.\n  *\n  * Delays 800ms to simulate an async REST API delay.\n  */\n  authenticate (username, password) {\n    // checks if the username is one of the known usernames, and the password is 'password'\n    const checkCredentials = () => new Promise((resolve, reject) => {\n      var validUsername = this.usernames.indexOf(username) !== -1;\n      var validPassword = password === 'password';\n      setTimeout(() => {\n        if (validUsername && validPassword) resolve(username)\n        else reject(\"Invalid username or password\");\n      }, 800);\n    });\n\n    return checkCredentials()\n      .then((authenticatedUser) => {\n        AppConfig.emailAddress = authenticatedUser;\n        AppConfig.save();\n      });\n  }\n\n  /** Logs the current user out */\n  logout () {\n    AppConfig.emailAddress = undefined;\n    AppConfig.save();\n  }\n}\n\nlet instance = new AuthService();\nexport default instance;","import AuthService from './authService';\n/**\n * This file contains a Transition Hook which protects a\n * route that requires authentication.\n *\n * This hook redirects to /login when both:\n * - The user is not authenticated\n * - The user is navigating to a state that requires authentication\n */\n\nconst hook = {\n  // Matches if the destination state's data property has a truthy 'requiresAuth' property\n  criteria: {\n    to: (state) => state.data && state.data.requiresAuth\n  },\n  // Function that returns a redirect for the current transition to the login state\n  // if the user is not currently authenticated (according to the AuthService)\n  callback: (transition) => {\n    let $state = transition.router.stateService;\n    if (!AuthService.isAuthenticated()) {\n      return $state.target('login', undefined, { location: false });\n    }\n  }\n}\n\nexport default hook;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {UISref, UISrefActive} from '@uirouter/react';\n\nimport AppConfig from '../../global/appConfig';\nimport AuthService from '../../global/authService';\n\nclass NavHeader extends Component {\n  static propTypes = {\n    onLogout: PropTypes.func\n  }\n  handleLogout = () => {\n    this.props.onLogout();\n  }\n\n  render () {\n    let isAuthenticated = AuthService.isAuthenticated();\n    let emailAddress = AppConfig.emailAddress;\n\n    let navbar = (\n      <ul className=\"nav nav-tabs\">\n        <UISrefActive class={'active'}><UISref to={'mymessages'}><li><a role=\"button\">Messages</a></li></UISref></UISrefActive>\n        <UISrefActive class={'active'}><UISref to={'contacts'}><li><a role=\"button\">Contacts</a></li></UISref></UISrefActive>\n        <UISrefActive class={'active'}><UISref to={'prefs'}><li><a role=\"button\">Preferences</a></li></UISref></UISrefActive>\n\n        <li className=\"navbar-right\">\n          <UISref to={'home'}><button style={{marginRight: 5}}className=\"btn btn-primary fa fa-home\"></button></UISref>\n          <UISref to={'mymessages.compose'}><button style={{marginRight: 15}} className=\"btn btn-primary\"><i className=\"fa fa-envelope\"></i> New Message</button></UISref>\n        </li>\n\n        <li className=\"navbar-text navbar-right logged-in-user\" style={{margin: '0.5em 1.5em'}}>\n          <div>\n            {emailAddress} <i className=\"fa fa-chevron-down\"></i>\n            <div className=\"hoverdrop\">\n              <button className=\"btn btn-primary\" onClick={this.handleLogout}>Log Out</button>\n            </div>\n          </div>\n        </li>\n      </ul>\n    );\n\n    return isAuthenticated\n      ? navbar\n      : <span/>;\n  }\n}\n\nexport default NavHeader;\n","import React, { Component } from 'react';\nimport { UIView } from '@uirouter/react';\n\nimport AuthService from '../global/authService';\nimport NavHeader from './components/NavHeader';\n\n/**\n * This is the main app component for an authenticated user.\n *\n * This component renders the outermost chrome (application header and tabs, the compose  and logout button)\n * It has a `UIView` viewport for nested states to fill in.\n */\nclass App extends Component {\n  constructor (props) {\n    super(props);\n  }\n\n  handleLogout = () => {\n    let {transition} = this.props;\n    AuthService.logout();\n    transition.router.stateService.go('welcome', {}, { reload: true });\n  }\n\n  render () {\n    return (\n      <div>\n        <div className=\"navheader\">\n          <NavHeader onLogout={this.handleLogout}/>\n        </div>\n        <UIView/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport {UISref} from '@uirouter/react';\n\nclass Welcome extends Component {\n  render () {\n    return (\n      <div className=\"container-fluid\">\n        <h3>UI-Router Sample App</h3>\n        <p>Welcome to the sample app!</p>\n        <p>This is a demonstration app intended to highlight some patterns that can be used within UI-Router.\n          These patterns should help you to to build cohesive, robust apps.  Additionally, this app uses state-vis\n          to show the tree of states, and a transition log visualizer.</p>\n        <h4>App Overview</h4>\n        <p>First, start exploring the application's functionality at a high level by activating\n          one of the three submodules: Messages, Contacts, or Preferences. If you are not already logged in,\n          you will be taken to an authentication screen (the authentication is fake; the password is \"password\")\n        </p>\n        <div>\n          <UISref to={'mymessages'}><button className=\"btn btn-primary\"><i className=\"fa fa-envelope\"></i><span>Messages</span></button></UISref>\n          <UISref to={'contacts'}><button className=\"btn btn-primary\"><i className=\"fa fa-users\"></i><span>Contacts</span></button></UISref>\n          <UISref to={'prefs'}><button className=\"btn btn-primary\"><i className=\"fa fa-cogs\"></i><span>Preferences</span></button></UISref>\n        </div>\n        <h4>Patterns and Recipes</h4>\n        <ul>\n          <li>Require Authentication</li>\n          <li>Previous State</li>\n          <li>Redirect Hook</li>\n          <li>Default Param Values</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Welcome;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends React.Component {\n  static propTypes = {\n    username: PropTypes.string,\n    usernameOptions: PropTypes.arrayOf(PropTypes.string),\n    password: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool,\n    onChangeValues: PropTypes.func,\n    onSubmit: PropTypes.func\n  }\n  handleSubmit = () => {\n    let {username, password} = this.props;\n    this.props.onSubmit({username, password});\n  }\n  handleChangeUsername = (event) => {\n    this.props.onChangeValues({username:event.target.value, password: this.props.password});\n  }\n  handleChangePassword = (event) => {\n    this.props.onChangeValues({username:this.props.username, password: event.target.value});\n  }\n  render() {\n    let { username, usernameOptions, password, error, loading } = this.props;\n    return (\n      <div className=\"login-form\">\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <select className=\"form-control\"\n            name=\"username\"\n            id=\"username\"\n            value={username}\n            onChange={this.handleChangeUsername}>\n            <option value=\"\" disabled></option>\n            {usernameOptions.map(option => <option key={option} value={option}>{option}</option>)}\n          </select>\n          {!username ? <i style={{display: 'block', position: 'relative', bottom: '1.8em', marginLeft: '10em', height: 0}} className=\"fa fa-arrow-left bounce-horizontal\"> Choose </i> : null}\n        </div>\n        <br/>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input className=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChangePassword}/>\n          {username && password !== 'password' ? <i style={{position: 'relative', bottom: '1.8em', marginLeft: '5em', height: 0}} className=\"fa fa-arrow-left bounce-horizontal\">Enter '<b>password</b>' here</i> : null}\n        </div>\n        {error ? <div className=\"well error\">{error}</div> : null}\n        <hr/>\n        <div>\n          <button className=\"btn btn-primary\"\n            type=\"button\"\n            disabled={loading}\n            onClick={this.handleSubmit}>\n            {loading ? <i className=\"fa fa-spin fa-spinner\"></i> : null} <span>Log in</span>\n          </button>\n          {username && password === 'password' ? <i style={{position: 'relative'}} className=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n\n/*\n<div>\n<label for=\"password\">Password:</label>\n<input class=\"form-control\" type=\"password\" name=\"password\" ng-model=\"$ctrl.credentials.password\">\n<i style=\"position: relative; bottom: 1.8em; margin-left: 5em; height: 0\"\nng-hide=\"!$ctrl.credentials.username || $ctrl.credentials.password == 'password'\" class=\"fa fa-arrow-left bounce-horizontal\">\nEnter '<b>password</b>' here\n</i>\n</div>\n\n<div ng-show=\"$ctrl.errorMessage\" class=\"well error\">{{ $ctrl.errorMessage }}</div>\n\n<hr>\n<div>\n<button class=\"btn btn-primary\" type=\"button\"\nng-disabled=\"$ctrl.authenticating\" ng-click=\"$ctrl.login($ctrl.credentials)\">\n<i class=\"fa fa-spin fa-spinner\" ng-show=\"$ctrl.authenticating\"></i> <span>Log in</span>\n</button>\n<i ng-show=\"$ctrl.credentials.username && $ctrl.credentials.password == 'password'\" style=\"position: relative;\" class=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i>\n</div>\n*/\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthService from '../global/authService';\nimport AppConfig from '../global/appConfig';\n\nimport LoginForm from './components/LoginForm';\n/**\n * This component renders a faux authentication UI\n *\n * It prompts for the username/password (and gives hints with bouncy arrows)\n * It shows errors if the authentication failed for any reason.\n *\n * The `login` method validates the credentials.\n * Then it sends the user back to the `returnTo` state, which is provided as a resolve data.\n */\nclass Login extends Component {\n  static propTypes = {\n    returnTo: PropTypes.object,\n  }\n\n  constructor (props) {\n    super(props);\n    this.usernames = AuthService.usernames;\n    this.state = {\n      username: AppConfig.emailAddress || '',\n      password: 'password',\n      authenticating: false,\n      errorMessage: ''\n    }\n  }\n  handleChangeCredentials = (credentials) => {\n    this.setState(credentials);\n  }\n  handleLogin = (credentials) => {\n    let {transition, returnTo} = this.props;\n    const done = () => this.setState({authenticating:false});\n    const showError = (errorMessage) => this.setState({errorMessage});\n    const returnToOriginalState = () => transition.router.stateService.go(returnTo.state(), returnTo.params(), { reload: true });\n\n    this.setState({authenticating:true});\n    AuthService.authenticate(credentials.username, credentials.password)\n      .then(returnToOriginalState)\n      .catch((error) => {\n        done();\n        showError(error);\n      });\n  }\n  render () {\n    let {errorMessage, authenticating, username, password} = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\n          <h3>Log In</h3>\n          <p>(This login screen is for demonstration only... just pick a username, enter 'password' and click <b>\"Log in\"</b>)</p>\n          <hr/>\n          <LoginForm\n            usernameOptions={this.usernames}\n            username={username}\n            password={password}\n            error={errorMessage}\n            loading={authenticating}\n            onChangeValues={this.handleChangeCredentials}\n            onSubmit={this.handleLogin}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import App from '../main/App';\nimport Welcome from '../main/Welcome';\nimport Login from '../main/Login';\nimport Home from '../main/Home';\n\n/**\n * This is the parent state for the entire application.\n *\n * This state's primary purposes are:\n * 1) Shows the outermost chrome (including the navigation and logout for authenticated users)\n * 2) Provide a viewport (ui-view) for a substate to plug into\n */\nconst appState = {\n  name: 'app',\n  redirectTo: 'welcome',\n  component: App\n};\n\n/**\n * This is the 'welcome' state.  It is the default state (as defined by app.js) if no other state\n * can be matched to the URL.\n */\nconst welcomeState = {\n  parent: 'app',\n  name: 'welcome',\n  url: '/welcome',\n  component: Welcome\n};\n\n/**\n * This is a home screen for authenticated users.\n *\n * It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\n */\nconst homeState = {\n  parent: 'app',\n  name: 'home',\n  url: '/home',\n  component: Home\n};\n\n\n/**\n * This is the login state.  It is activated when the user navigates to /login, or if a unauthenticated\n * user attempts to access a protected state (or substate) which requires authentication. (see routerhooks/requiresAuth.js)\n *\n * It shows a fake login dialog and prompts the user to authenticate.  Once the user authenticates, it then\n * reactivates the state that the user originally came from.\n */\nconst loginState = {\n  parent: 'app',\n  name: 'login',\n  url: '/login',\n  component: Login,\n  resolve: [\n    {\n      token: 'returnTo',\n      deps: [ '$transition$' ],\n      resolveFn: returnTo,\n    },\n  ]\n};\n\n/**\n * A resolve function for 'login' state which figures out what state to return to, after a successful login.\n *\n * If the user was initially redirected to login state (due to the requiresAuth redirect), then return the toState/params\n * they were redirected from.  Otherwise, if they transitioned directly, return the fromState/params.  Otherwise\n * return the main \"app\" state.\n */\nfunction returnTo ($transition$) {\n  if ($transition$.redirectedFrom()) {\n    // The user was redirected to the login state (e.g., via the requiresAuth hook when trying to activate contacts)\n    // Return to the original attempted target state (e.g., contacts)\n    return $transition$.redirectedFrom().targetState();\n  }\n\n  let $state = $transition$.router.stateService;\n\n  // The user was not redirected to the login state; they directly activated the login state somehow.\n  // Return them to the state they came from.\n  if ($transition$.from().name !== '') {\n    return $state.target($transition$.from(), $transition$.params(\"from\"));\n  }\n\n  // If the fromState's name is empty, then this was the initial transition. Just return them to the home state\n  return $state.target('home');\n}\n\n// Future State (Placeholder) for the contacts module\nexport const contactsFutureState = {\n  parent: 'app',\n  name: 'contacts.**',\n  url: '/contacts',\n  lazyLoad: () => import('../contacts/states'),\n};\n\n// Future State (Placeholder) for the prefs module\nexport const prefsFutureState = {\n  parent: 'app',\n  name: 'prefs.**',\n  url: '/prefs',\n  lazyLoad: () => import('../prefs/states'),\n};\n\n// Future State (Placeholder) for the mymessages module\nexport const mymessagesFutureState = {\n  parent: 'app',\n  name: 'mymessages.**',\n  url: '/mymessages',\n  lazyLoad: () => import('../mymessages/states'),\n};\n\n\nexport default [appState, welcomeState, homeState, loginState, contactsFutureState, prefsFutureState, mymessagesFutureState];\n","import React, {Component} from 'react';\nimport {UISref} from '@uirouter/react';\n\n// This is a home component for authenticated users.\n// It shows giant buttons which activate their respective pages: Messages, Contacts, Preferences\nclass Home extends Component {\n  render () {\n    return (\n      <div>\n      <div className=\"home buttons\">\n        <UISref to={'mymessages'}>\n          <button className=\"btn btn-primary\">\n            <h1><i className=\"fa fa-envelope\"/></h1>\n            <h1>Messages</h1>\n          </button>\n        </UISref>\n\n        <UISref to={'contacts'}>\n          <button className=\"btn btn-primary\">\n            <h1><i className=\"fa fa-users\"/></h1>\n            <h1>Contacts</h1>\n          </button>\n        </UISref>\n\n        <UISref to={'prefs'}>\n          <button className=\"btn btn-primary\">\n            <h1><i className=\"fa fa-cogs\"/></h1>\n            <h1>Preferences</h1>\n          </button>\n        </UISref>\n      </div>\n       </div>\n    );\n  }\n}\n\nexport default Home;\n","import {UIRouterReact, servicesPlugin, hashLocationPlugin} from '@uirouter/react';\nimport reqAuthHook from './global/requiresAuth.hook';\nimport appStates from './main/states';\n// Lazy load visualizer\nimport('@uirouter/visualizer').then(module => router.plugin(module.Visualizer));\n\n// Register the \"requires auth\" hook with the TransitionsService\nrouter.transitionService.onBefore(reqAuthHook.criteria, reqAuthHook.callback, {priority: 10});\n\n// Create a new instance of the Router\nexport const router = new UIRouterReact();\nrouter.plugin(servicesPlugin);\nrouter.plugin(hashLocationPlugin);\n\n// Register the initial (eagerly loaded) states\nappStates.forEach(state => router.stateRegistry.register(state));\n\n// Global config for router\nrouter.urlService.rules.initial({ state: 'welcome' });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { UIRouter, UIView } from '@uirouter/react';\nimport Dialog from './global/components/Dialog';\n\n// polyfill fetch func\nimport 'whatwg-fetch';\n\n// import styles\nimport './styles/index.css';\n\n// import routing\nimport {router} from './router.config';\n\nReactDOM.render(\n  <UIRouter router={router}>\n    <div>\n      <UIView/>\n      <Dialog/>\n    </div>\n  </UIRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}